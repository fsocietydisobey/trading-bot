# Application secret used to sign JWTs and other security-related tokens.
# Replace with a long, random value (at least 32+ bytes). Do NOT commit real secrets.
SECRET_KEY=your_super_secret_key

# JWT access token lifetime (in minutes). Example: 60 = 1 hour.
# Used by the auth service to set the 'exp' claim.
# JWT (optional issuer/audience)
JWT_SECRET=change_me_jwt
JWT_ISSUER=
JWT_AUDIENCE=
JWT_ACCESS_TTL_MIN=30


# MongoDB connection string. Format: mongodb://<host>:<port>/<db_name>
# In Docker, the hostname should match the service name in docker-compose.
MONGO_URI=mongodb://mongo:27017/your_database

# Flask application entry point and debug mode.
# FLASK_APP is the module or file to run. FLASK_DEBUG should be false in production.
FLASK_APP=app.py
FLASK_DEBUG=true

# InfluxDB v2 configuration.
# INFLUX_URL is the base URL of InfluxDB.
# INFLUX_TOKEN is an API token with write/read permissions.
# INFLUX_ORG is your InfluxDB organization name.
# INFLUX_BUCKET is the target bucket for time-series data.
# InfluxDB v2 auto-init
INFLUX_URL=http://influxdb:8086
INFLUX_ORG=primary
INFLUX_BUCKET=market_data
INFLUX_TOKEN=local-dev-admin-token


# Influx init envs (used by container)
DOCKER_INFLUXDB_INIT_USERNAME=admin
DOCKER_INFLUXDB_INIT_PASSWORD=change_me
DOCKER_INFLUXDB_INIT_MODE=setup
DOCKER_INFLUXDB_INIT_RETENTION=0


# Polygon
# API key for Polygon.io financial data API
POLYGON_API_KEY=JQwSi3FLtpDY2KhkZzb__LyDhLhxy6bj
STREAM_SYMBOLS=X:BTCUSD,X:ETHUSD

# WebSocket fan-out bind
WS_BIND_HOST=0.0.0.0
WS_BIND_PORT=8081

